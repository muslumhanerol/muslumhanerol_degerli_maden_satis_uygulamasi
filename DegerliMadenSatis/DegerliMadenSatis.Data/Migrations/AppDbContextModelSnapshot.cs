// <auto-generated />
using System;
using DegerliMadenSatis.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DegerliMadenSatis.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.17");

            modelBuilder.Entity("DegerliMadenSatis.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(846),
                            Description = "Altın Kategorisi",
                            IsActive = true,
                            IsDelete = false,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(860),
                            Name = "Nesne Altın",
                            Url = "nesne-altin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(863),
                            Description = "Altın Kategorisi",
                            IsActive = true,
                            IsDelete = false,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(863),
                            Name = "Dijital Altın",
                            Url = "dijital-altin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(865),
                            Description = "Sarrafiye Kategorisi",
                            IsActive = true,
                            IsDelete = false,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(865),
                            Name = "Sarrafiye",
                            Url = "sarrafiye-altin"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(870),
                            Description = "Gümüş Kategorisi",
                            IsActive = true,
                            IsDelete = false,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(870),
                            Name = "Nesne Gümüş",
                            Url = "nesne-gümüs"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(872),
                            Description = "Gümüş Kategorisi",
                            IsActive = true,
                            IsDelete = false,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(872),
                            Name = "Dijital Gümüş",
                            Url = "dijital-gümüs"
                        });
                });

            modelBuilder.Entity("DegerliMadenSatis.Entity.CategoryProduct", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryProducks", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 10
                        });
                });

            modelBuilder.Entity("DegerliMadenSatis.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHome")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3073),
                            ImageUrl = "1.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3082),
                            Name = "20gr Külçe",
                            Price = 48000m,
                            Properties = "24 Ayar Saflıkta, 20 gr Külçe Altın.",
                            Url = "20gr-külce-altin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3088),
                            ImageUrl = "2.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3088),
                            Name = "50gr Külçe",
                            Price = 120000m,
                            Properties = "24 Ayar Saflıkta, 50 gr Külçe Altın.",
                            Url = "50gr-külce-altin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3091),
                            ImageUrl = "3.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3092),
                            Name = "100gr Külçe",
                            Price = 240000m,
                            Properties = "24 Ayar Saflıkta, 100 gr Külçe Altın.",
                            Url = "100gr-külce-altin"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3094),
                            ImageUrl = "4.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3094),
                            Name = "250gr Külçe",
                            Price = 620000m,
                            Properties = "24 Ayar Saflıkta, 250 gr Külçe Altın.",
                            Url = "250gr-külce-altin"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3096),
                            ImageUrl = "5.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3097),
                            Name = "Çeyrek Altın",
                            Price = 4500m,
                            Properties = "24 Ayar Saflıkta, Çeyrek Altın.",
                            Url = "ceyrek-altin"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3099),
                            ImageUrl = "6.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3099),
                            Name = "Yarim Altın",
                            Price = 90000m,
                            Properties = "24 Ayar Saflıkta, Yarım Altın.",
                            Url = "yarim-altin"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3102),
                            ImageUrl = "7.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3102),
                            Name = "Tam Altın",
                            Price = 180000m,
                            Properties = "24 Ayar Saflıkta, Tam Altın.",
                            Url = "tam-altin"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3104),
                            ImageUrl = "8.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3105),
                            Name = "100gr Külçe",
                            Price = 45000m,
                            Properties = "925 Saflıkta, 100 gr Külçe Gümüş.",
                            Url = "100gr-külce-gümüs"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3107),
                            ImageUrl = "9.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3107),
                            Name = "250gr Külçe",
                            Price = 112500m,
                            Properties = "925 Saflıkta, 250 gr Külçe Gümüş.",
                            Url = "250gr-külce-gümüs"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDdate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3109),
                            ImageUrl = "10.png",
                            IsActive = true,
                            IsDelete = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 3, 19, 1, 8, 11, 89, DateTimeKind.Local).AddTicks(3110),
                            Name = "500gr Külçe",
                            Price = 225000m,
                            Properties = "925 Saflıkta, 500 gr Külçe Gümüş.",
                            Url = "500gr-külce-gümüs"
                        });
                });

            modelBuilder.Entity("DegerliMadenSatis.Entity.CategoryProduct", b =>
                {
                    b.HasOne("DegerliMadenSatis.Entity.Category", "Category")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DegerliMadenSatis.Entity.Product", "Product")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DegerliMadenSatis.Entity.Category", b =>
                {
                    b.Navigation("CategoryProducts");
                });

            modelBuilder.Entity("DegerliMadenSatis.Entity.Product", b =>
                {
                    b.Navigation("CategoryProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
